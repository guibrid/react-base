{"version":3,"sources":["components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js"],"names":["TodoItem","alert","this","props","todo","completed","id","title","className","type","checked","onChange","handleChangeProps","style","fontStyle","color","opacity","textDecoration","onClick","deleteTodoProps","React","Component","TodosList","todos","map","key","Header","prevProps","prevState","bgColor","Math","floor","random","headerSpan","document","getElementById","innerHTML","backgroundColor","fontSize","marginBottom","padding","InputTodo","state","e","setState","target","name","value","handleSubmit","preventDefault","addTodoProps","onSubmit","placeholder","TodoContainer","show","handleChange","delTodo","axios","delete","then","response","filter","addTodoItem","post","data","get","ReactDOM","render"],"mappings":"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","file":"static/js/main.4281109c.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nclass TodoItem extends React.Component {\r\n\r\n    componentWillUnmount() {\r\n        alert(\"Item about to be deleted!\")\r\n    }\r\n\r\n    render() {\r\n        const { completed, id, title } = this.props.todo\r\n\r\n        const completedStyle = {\r\n            fontStyle: \"italic\",\r\n            color: \"#d35e0f\",\r\n            opacity: 0.4,\r\n            textDecoration: \"line-through\",\r\n        }\r\n\r\n        return (\r\n            <li className=\"todo-item\">\r\n                <input type=\"checkbox\"\r\n                    checked={completed}\r\n                    onChange={() => this.props.handleChangeProps(id)} />\r\n                <span style={completed ? completedStyle : null}>\r\n                    {title}\r\n                </span>\r\n                \r\n                \r\n                <button\r\n                    onClick={() => this.props.deleteTodoProps(id)}>Delete</button>\r\n                </li>\r\n        )\r\n    }\r\n} \r\n\r\nexport default TodoItem","import React from \"react\"\r\nimport TodoItem from \"./TodoItem\"\r\n\r\nclass TodosList extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.todos.map(todo => (\r\n                    <TodoItem \r\n                        key={todo.id} \r\n                        todo={todo}\r\n                        handleChangeProps={this.props.handleChangeProps}\r\n                        deleteTodoProps = {this.props.deleteTodoProps}\r\n                    />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodosList","import React, { Component } from \"react\"\r\n\r\nclass Header extends Component {\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        var x = Math.floor(Math.random() * 256)\r\n        var y = Math.floor(Math.random() * 256)\r\n        var z = Math.floor(Math.random() * 256)\r\n        var bgColor = \"rgb(\" + x + \",\" + y + \",\" + z + \")\"\r\n\r\n        if (prevProps.headerSpan !== this.props.headerSpan) {\r\n            document.getElementById(\"inH1\").innerHTML = \"clicked\";\r\n            document.getElementById(\"inH1\").style.backgroundColor = bgColor;\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const subHeaderStyle = {\r\n            padding: \"10px 0\",\r\n            color:\"#CCCCCC\"\r\n        }\r\n\r\n        return (\r\n            <header>\r\n                <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\"}}>App <span id=\"inH1\"></span></h1>\r\n                <p style={subHeaderStyle}>To-dos</p>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header","import React, { Component } from \"react\"\r\n\r\nclass InputTodo extends Component {\r\n    state = {\r\n        title: \"\"\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.addTodoProps(this.state.title)\r\n        this.setState({\r\n            title: \"\"\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className=\"form-container\">\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"input-text\"\r\n                    placeholder=\"Add Todo...\" \r\n                    value={this.state.title}\r\n                    name=\"title\"\r\n                    onChange={this.onChange} />\r\n                <input type=\"submit\" className=\"input-submit\" value=\"Submit\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputTodo","import React from \"react\"\r\nimport TodosList from \"./TodosList\"\r\nimport Header from \"./Header\"\r\nimport InputTodo from \"./InputTodo\"\r\nimport axios from \"axios\";\r\n\r\nclass TodoContainer extends React.Component {\r\n\r\n    state = {\r\n        todos: [],\r\n        show: false\r\n    };\r\n\r\n    handleChange = (id) => {\r\n      this.setState({\r\n        todos: this.state.todos.map(todo => {\r\n          if (todo.id === id){\r\n            todo.completed = !todo.completed;\r\n          }\r\n          return todo;\r\n        }),\r\n        show: !this.state.show,\r\n      })\r\n    }\r\n\r\n    delTodo = id => {\r\n      axios\r\n      .delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n      .then(response =>\r\n        this.setState({\r\n          todos: [\r\n            ...this.state.todos.filter(todo => {\r\n              return todo.id !== id\r\n            })\r\n          ]\r\n        })\r\n      )\r\n    }\r\n\r\n    addTodoItem = title => {\r\n      axios\r\n        .post(\"https://jsonplaceholder.typicode.com/todos\", {\r\n          title: title,\r\n          completed:false,\r\n        })\r\n        .then(response =>\r\n          this.setState({\r\n            todos: [...this.state.todos, response.data]\r\n          })\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n      axios.get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\r\n        .then(response => this.setState({ todos: response.data }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Header headerSpan={this.state.show} />\r\n                \r\n                <TodosList todos={this.state.todos} \r\n                           handleChangeProps={this.handleChange}\r\n                           deleteTodoProps = {this.delTodo} />\r\n                <InputTodo addTodoProps = {this.addTodoItem} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TodoContainer","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n\r\n\r\nimport TodoContainer from \"./components/TodoContainer\"\r\nimport \"./App.css\"\r\n\r\nReactDOM.render(<TodoContainer />, document.getElementById(\"root\"))"],"sourceRoot":""}